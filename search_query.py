# search_query.py
import numpy as np
import face_recognition
from db import get_metadata

def search_person(query_path, index, filenames, top_k=5):
    try:
        query_image = face_recognition.load_image_file(query_path)
        query_faces = face_recognition.face_encodings(query_image)
    except Exception as e:
        print(f"‚ùå L·ªói khi load ·∫£nh query: {e}")
        return {"success": False, "message": "L·ªói khi load ·∫£nh."}

    if not query_faces:
        print("‚ùå Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t trong ·∫£nh truy v·∫•n.")
        return {"success": False, "message": "Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t trong ·∫£nh truy v·∫•n."}
    if index.ntotal == 0 or len(filenames) == 0:
        return {"success": False, "message": "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu"}
    if index.ntotal < top_k:
        top_k = index.ntotal
    
    query_embedding = query_faces[0].astype('float32')
    distances, indices = index.search(np.array([query_embedding]), top_k)

    results = []
    print(f"\nüîç K·∫øt qu·∫£ t√¨m ki·∫øm (Top {top_k}):")
    for i, idx in enumerate(indices[0]):
        distance = distances[0][i]
        label = "‚úÖ Gi·ªëng" if distances[0][i] < 0.4 else "‚ö†Ô∏è C√≥ th·ªÉ gi·ªëng" if distances[0][i] < 0.6 else "‚ùå Kh√°c"
        key = filenames[idx]
        metadata = get_metadata(key)
        print(f"{i+1}. {key} (Kho·∫£ng c√°ch: {distances[0][i]:.4f}) {label}")
        results.append({
            "rank": i + 1,
            "key": key,
            "metadata": metadata,
            "distance": float(distance)
        })
    return {"success": True, "results": results}

